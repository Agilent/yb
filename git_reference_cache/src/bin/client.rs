use std::time::{Duration, SystemTime};
use tarpc::{client, context, tokio_serde::formats::Json};
use git_reference_cache::service::ServiceClient;

#[tokio::main]
async fn main() -> anyhow::Result<()> {
    let transport = tarpc::serde_transport::tcp::connect("127.0.0.1:1234", Json::default);

    // WorldClient is generated by the service attribute. It has a constructor `new` that takes a
    // config and any Transport as input.
    let client = ServiceClient::new(client::Config::default(), transport.await?).spawn();

    let mut context = context::current();
    context.deadline = SystemTime::now() + Duration::from_secs(60 * 5);

    let p1 = client.clone(context, "https://github.com/console-rs/indicatif.git".into());
    let p2 = client.clone(context, "https://github.com/yoctoproject/poky.git".into());

    let ret = tokio::join!(p1, p2);
    dbg!(ret);

    eprintln!("DONE");

    Ok(())
}
